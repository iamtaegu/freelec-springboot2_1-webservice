buildscript {
    // springBootVersion 전역변수 설정
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'




group 'com.jojoldu.book'
version '1-0.1-SNAPSHOT' + new Date().format("yyyyMMddHHmmss")
sourceCompatibility = 1.8
//sourceCompatibility = 11


repositories {
    mavenCentral()
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-web')
    implementation ('org.projectlombok:lombok')
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation ('org.springframework.boot:spring-boot-starter-mustache')
    implementation ('com.h2database:h2')
    // hot deploy 설정
    implementation ('org.springframework.boot:spring-boot-devtools')
    //스프링 시큐리티 설정
    implementation ('org.springframework.boot:spring-boot-starter-oauth2-client')
    //DB를 세션 저장소로 사용
    implementation ('org.springframework.session:spring-session-jdbc')

    implementation ("org.mariadb.jdbc:mariadb-java-client")

    // 스프링 클라우드 의존성 추가 START

    implementation ('org.springframework.cloud:spring-cloud-starter-config')

    implementation ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')

    // spring-cloud-starter-ribbon 및 ribbon-eureka 의존성을 제외합니다.
    implementation ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client') {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-ribbon'
    }
    implementation ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client') {
        exclude group: 'com.netflix.ribbon', module: 'ribbon-eureka'
    }

    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    // END

    testImplementation ('org.springframework.boot:spring-boot-starter-test')
    testImplementation ("org.springframework.security:spring-security-test")
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR1'
    }
}
